server:
  port: 8099  # 모든 환경에서 공통 포트
  servlet:
    encoding:
      charset: UTF-8
      enabled: true
      force: true

spring:
  application:
    name: stockradar

  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    check-template-location: true
    cache: false

  profiles:
    active: local

  sql:
    init:
      mode: always
      continue-on-error: true

  jpa:
    # show_sql: true # System.out 방식 (이거 말고 logging.level.org.hibernate.SQL 설정을 권장)
    properties:
      hibernate:
        format_sql: true
        highlight_sql: true
        use_sql_comments: true
      dialect: org.hibernate.dialect.MySQL8InnoDBDialect

  datasource:
    hikari:
      minimum-idle: 5
      maximum-pool-size: 10
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  data:
    redis:
      host: ec2-3-36-71-38.ap-northeast-2.compute.amazonaws.com
      port: 6379

  # kafka #######################################################
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: notification-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"  # 모든 패키지를 신뢰할 경우

  mail:
    host: smtp.gmail.com
    port: 587
    username: santa1.0system@gmail.com
    password: qjzc mlib vslc aorb
    properties:
      mail:
        smtp:
          auth: true
          starttls.enable: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000

management:
  health:
    elasticsearch:
      enabled: false # 불필요한 health check fail 로그 차단

# 추가 공통 설정 (로깅 레벨, 국제화, 배치, 캐시 등)
##### log setting
logging:
  level:
    root: INFO
    org.springframework: INFO
    org.springframework.web: DEBUG
    org.example.stockradar: DEBUG
    org.thymeleaf: INFO
    org.springframework.boot.web.servlet: ERROR
    org.hibernate.SQL: DEBUG

  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %highlight(%-5level) %cyan(%logger{36}) - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    dateformat: "yyyy-MM-dd HH:mm:ss,Asia/Seoul" # ms는 제외함

  # file log
  file:
    name: logs/app.log
    path: logs

  logback:
    rollingpolicy:
      file-name-pattern: "StockRadar.%d{yyyy-MM-dd}.%i.log"
      max-history: 60

  spring:
    output:
      ansi:
        enabled: ALWAYS
# s3
cloud:
  aws:
    credentials:
      access-key: ${}
      secret-key: ${}

    s3:
      bucket: stockradars3
    region:
      static: ap-northeast-2
    stack:
      auto: false
    s3path: "https://stockradars3.s3.ap-northeast-2.amazonaws.com"
    cloudfrontpath: "https://dxhufg9x2pwyh.cloudfront.net"

discord:
  bot:
    token: ""


